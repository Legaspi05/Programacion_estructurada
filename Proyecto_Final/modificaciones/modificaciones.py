from conexionBD import conexion, cursor
from funciones import borrarPantalla, esperarTecla

# Funci√≥n para editar un producto existente
def editarProducto():
    borrarPantalla()
    try:
        id_producto = int(input("üÜî Ingresa el ID del producto a editar: "))
        nuevo_nombre = input("üì¶ Nuevo nombre del producto: ").strip()
        nuevo_precio = float(input("üíµ Nuevo precio: "))
        nuevo_stock = int(input("üì¶ Nuevo stock: "))

        sql = "UPDATE productos SET nombre = %s, precio = %s, stock = %s WHERE id = %s"
        val = (nuevo_nombre, nuevo_precio, nuevo_stock, id_producto)
        cursor.execute(sql, val)
        conexion.commit()

        print("‚úÖ Producto actualizado correctamente.")
    except Exception as e:
        print(f"‚ùå Error al actualizar el producto: {e}")


# Funci√≥n para eliminar un producto por su ID
def eliminarProducto():
    borrarPantalla()
    try:
        id_producto = input("üÜî Ingresa el ID del producto a eliminar: ").strip()

        # Validar que sea un n√∫mero
        if not id_producto.isdigit():
            print("‚ö†Ô∏è El ID debe ser un n√∫mero v√°lido.")
            return

        confirmar = input(f"‚ö†Ô∏è ¬øSeguro que quieres eliminar el producto con ID {id_producto}? (s/n): ").strip().lower()
        if confirmar != "s":
            print("‚ùå Eliminaci√≥n cancelada.")
            return

        sql = "DELETE FROM productos WHERE id = %s"
        val = (id_producto,)
        cursor.execute(sql, val)
        conexion.commit()

        if cursor.rowcount > 0:
            print("‚úÖ Producto eliminado correctamente.")
        else:
            print("‚ö†Ô∏è No se encontr√≥ un producto con ese ID.")

    except Exception as e:
        print(f"‚ùå Error al eliminar el producto: {e}")
